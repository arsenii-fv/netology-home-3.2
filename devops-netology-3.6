1.
2.
 Для частоты 2.4 ГГц - 3 независимых канала (1, 6, 11).
 Для частоты 5 ГГц для ширина 20 МГц
  канал 32, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112,
  116, 120, 124,128, 136, 140, 144, 153, 157, 161, 165, 169, 173, 
  177, 183, 188, 196
 итого 30 неперекрывающихся канала
 если взять шириной 10 МГц число каналов увеличится в 2 раза 

Apple, Inc
3.
  
4.
   Payload = 9001 - 20 - 32 
   
5.
 Передача сообщении  по TCP можно разделить на три фазы :
  - установление соединения
  - передача сообщения
  - завершение соединения
  При установлении соединения происходит "трехстороннее рукопажитие" , на этом этапе происходит установка флагов SYN and ACK
  Передача сообщения будет идти при наличии этих флагов
  Закрыть соединение может как отправитель так и получатель, но только при отсутствии флага SYN. 
  Поэтому при нормальной передаче данных одновременно не могут быть установленны флаги FIN and SYN. 
  Возможно зависание флага SYN соединения при закрытии но это уже другая ситуация.
  
6.
  Если запустить команду с другими параметрами
$ ss -ult sport = :53
Netid      State       Recv-Q       Send-Q             Local Address:Port               Peer Address:Port      Process
udp        UNCONN      0            0                  127.0.0.53%lo:domain                  0.0.0.0:*
tcp        LISTEN      0            4096               127.0.0.53%lo:domain                  0.0.0.0:*
То видно что состояние UNCONN (неизвестное) относится к протоколу UDP , у этого протокола нет флагов.
Состояние TIME-WAIT также будет отсутствовать.

7.
 Закрытие соединения происходит в 4 этапа, 
 Как правило клиент закрывает соединение первым,
 например команда close и отправляет на сервер сообщение с флагом FIN and ACK(n)
                client           flag                       server
                state                                        state 
          1     (close)      > FIN > ACK(n)> 
 
               FIN-WAIT1                    
          2                   < ACK(n+1) <               (close)
               FIN-WAIT2                                CLOSE WAIT 
          3                   <  FIN  ACK(m)  <                   
               TIME-WAIT                                 LAST ACK 
          4    TIME-WAIT      >  ACK (m+1)  >            LAST ACK
                CLOSED                                   CLOSED 
 
8.
   ip:port(client) - ip:port(server)
   Максимальное число соединений с одного ip на сервер 65535*65535
   Если число клиентов больше тогда ip(client)*port(client)*port(server)
   Или ip(client)*65535*65535

9.
   Если на хосте есть большое количество соединений в состоянии TIME-WAIT, это не очень хорошая ситуация.
   Во первых так как все файл и каждому соединению выделяется файловый дескриптор, а их количество ограничено,
   может не хватить для других процессов.
   Во вторых на закрытые соединения отводится какое-то время , то есть хост может зависнуть.
   
10.
Фрагментация используется при необходимости передачи IP-дейтаграммы через сеть, в которой максимально допустимая единица передачи данных (maximum transmission unit - MTU) меньше размера этой дейтаграммы. Существуют несколько проблем, когда IP фрагментация нежелательна. Чтобы фрагментировать IP датаграмму требуются больше ресурсов CPU и памяти. Это справедливо как для отправителя так и для маршрутизатора между отправителем и получателем.У межсетевых экранов, которые фильтруют или управляют пакетами, основываясь на информации уровня 4 (L4) до уровеня 7 (L7), могут возникать трудности с корректной обработкой IP фрагментов. Если IP фрагменты – не упорядочены, межсетевая защита может блокировать не начальные фрагменты, потому что они не несут информацию, которая соответствовала бы фильтру пакета. Это означает, что оригинальная IP датаграмма не может быть повторно собрана хостом при получении. Если межсетевой экран конфигурирован так, чтобы разрешать прохождение неначальных фрагментов с недостаточной информацией, которая не соответствует правилам фильтрации должным образом, то межсетевой экран может пропустить атаку, основанную на неначальных фрагментах.
TCP пакеты поддерживает PMTUD (Path MTU discovery) и если машина поддерживает PMTUD то все пакеты помечаются флагом DF (не фрагментировать). Из этого следует что
при передаче TCP пакетов можно избежать фрагментации.
Отличие фрагментации TCP от  UDP . Если теряется один фрагмент TCP пакета, то пекет передается снова. При патери фрагмента UDP, весь пакет может потерять смысл, т к повторной передачи нет. 
11.
 Для отправки логов можно использовать протокол UDP (ошибки как правило имеют свойство повторяться).   

12.
  $ sudo ss -atl
State         Recv-Q        Send-Q               Local Address:Port                 Peer Address:Port        Process
LISTEN        0             4096                       0.0.0.0:sunrpc                    0.0.0.0:*
LISTEN        0             4096                 127.0.0.53%lo:domain                    0.0.0.0:*
LISTEN        0             128                        0.0.0.0:ssh                       0.0.0.0:*
LISTEN        0             4096                          [::]:sunrpc                       [::]:*
LISTEN        0             128                           [::]:ssh                          [::]:*
 3 порта, процессы : sunrpc, domain, ssh

13.
  sudo tcpdump -i eth0 -e -vvv -c 1 -x
tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
18:46:21.291474 08:00:27:14:86:db (oui Unknown) > 52:54:00:12:35:02 (oui Unknown), ethertype IPv4 (0x0800), length 90: (tos 0x10, ttl 64, id 11592, offset 0, flags [DF], proto TCP (6), length 76)
    10.0.2.15.ssh > 10.0.2.2.51466: Flags [P.], cksum 0x184f (incorrect -> 0x7123), seq 552790123:552790159, ack 25280171, win 64032, length 36
        0x0000:  4510 004c 2d48 4000 4006 f543 0a00 020f
        0x0010:  0a00 0202 0016 c90a 20f2 e86b 0181 beab
        0x0020:  5018 fa20 184f 0000 0a8d d371 ef21 87fd
        0x0030:  38c5 2f28 4d8f 0286 d2b4 2492 ba59 8faa
        0x0040:  4641 aed1 d517 aae9 8c81 49a6
1 packet captured
46 packets received by filter
13 packets dropped by kernel
14.
