1.
2.
 Для частоты 2.4 ГГц - 3 независимых канала (1, 6, 11).
 Для частоты 5 ГГц для ширина 20 МГц
  канал 32, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112,
  116, 120, 124,128, 136, 140, 144, 153, 157, 161, 165, 169, 173, 
  177, 183, 188, 196
 итого 30 неперекрывающихся канала
 если взять шириной 10 МГц число каналов увеличится в 2 раза 

Apple, Inc
3.
  
4.
   Payload = 9001 - 20 - 32 
   
5.
 Передача сообщении  по TCP можно разделить на три фазы :
  - установление соединения
  - передача сообщения
  - завершение соединения
  При установлении соединения происходит "трехстороннее рукопажитие" , на этом этапе происходит установка флагов SYN and ACK
  Передача сообщения будет идти при наличии этих флагов
  Закрыть соединение может как отправитель так и получатель, но только при отсутствии флага SYN. 
  Поэтому при нормальной передаче данных одновременно не могут быть установленны флаги FIN and SYN. 
  Возможно зависание флага SYN соединения при закрытии но это уже другая ситуация.
  
6.
  Если запустить команду с другими параметрами
$ ss -ult sport = :53
Netid      State       Recv-Q       Send-Q             Local Address:Port               Peer Address:Port      Process
udp        UNCONN      0            0                  127.0.0.53%lo:domain                  0.0.0.0:*
tcp        LISTEN      0            4096               127.0.0.53%lo:domain                  0.0.0.0:*
То видно что состояние UNCONN (неизвестное) относится к протоколу UDP , у этого протокола нет флагов.
Состояние TIME-WAIT также будет отсутствовать.

7.
 Закрытие соединения происходит в 4 этапа, 
 Как правило клиент закрывает соединение первым,
 например команда close и отправляет на сервер сообщение с флагом FIN and ACK(n)
                client           flag                       server
                state                                        state 
          1     (close)      > FIN > ACK(n)> 
 
               FIN-WAIT1                    
          2                   < ACK(n+1) <               (close)
               FIN-WAIT2                                CLOSE WAIT 
          3                   <  FIN  ACK(m)  <                   
               TIME-WAIT                                 LAST ACK 
          4    TIME-WAIT      >  ACK (m+1)  >            LAST ACK
                CLOSED                                   CLOSED 
 
8.
   ip:port(client) - ip:port(server)
   Максимальное число соединений с одного ip на сервер 65535*65535
   Если число клиентов больше тогда ip(client)*port(client)*port(server)
9.
  
10.
11.
12.
13.
14.
