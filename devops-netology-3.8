1.
Пришлось изменить vagrant, не поднимались адреса ...10 ...60 ...90
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

#netology1
 config.vm.define "netology1" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "netology1"
 net.vm.network "private_network", auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname netology1;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.10/24 dev eth1;"\
		  "ip link set dev eth1 up;"\
		  "apt install -y ipvsadm;"\
		  "apt install -y mc;"\
          "apt install -y nginx;"\
		  "ip addr add 172.28.128.200/32 dev eth1 label eth1:200;"\
		  "ipvsadm -A -t 172.28.128.200:80 -s rr;"\
		  "ipvsadm -a -t 172.28.128.200:80 -r 172.28.128.10:80 -g -w 1;"\
		  "ipvsadm -a -t 172.28.128.200:80 -r 172.28.128.60:80 -g -w 1;"\
        #s.args = [k, "172.28.128.#{v}/24"]
      end
 end	  

#netology2
 config.vm.define "netology2" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "netology2"
 net.vm.network "private_network",auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname netology2;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.60/24 dev eth1;"\
		  "ip addr add 172.28.128.200/32 dev lo label lo:200;"\
          "ip link set dev eth1 up;"\
		  "apt install -y mc;"\
          "apt install -y nginx;"
        #s.args = [k, "172.28.128.#{v}/24"]
      end
 end

#netology3
 config.vm.define "netology3" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "netology3"
 net.vm.network "private_network",auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname netology3;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.90/24 dev eth1;"\
          "ip link set dev eth1 up;"\
		  		  "apt install -y mc;"\
          "apt install -y nginx;"
        #s.args = [k, "172.28.128.#{v}/24"]
      end
 end

end

Вывод файла tcpdump
vagrant@netology1:~$ sudo tcpdump -r packet.pcap
20:13:17.641475 IP 172.28.128.200.http > 172.28.128.90.60354: Flags [F.], seq 248, ack 81, win 509, options [nop,nop,TS val 1856728619 ecr 1106391136], length 0
20:13:17.641556 IP 172.28.128.90.60354 > 172.28.128.200.http: Flags [.], ack 249, win 501, options [nop,nop,TS val 1106391136 ecr 1856728619], length 0
20:13:22.561896 ARP, Request who-has 172.28.128.60 tell 172.28.128.10, length 28
20:13:22.562284 ARP, Reply 172.28.128.60 is-at 08:00:27:7b:27:18 (oui Unknown), length 46
20:17:32.161734 IP6 netology1 > ip6-allrouters: ICMP6, router solicitation, length 16
Происходит arp запрос: у кого есть адрес 172.28.128.60
Это длится какое-то время, поэтому зависают соединения в состоянии InActConn
vagrant@netology1:~$ sudo ip n show
10.0.2.2 dev eth0 lladdr 52:54:00:12:35:02 REACHABLE
10.0.2.3 dev eth0 lladdr 52:54:00:12:35:03 STALE
172.28.128.60 dev eth1 lladdr 08:00:27:7b:27:18 STALE
172.28.128.90 dev eth1 lladdr 08:00:27:0d:cd:e9 STALE

2.
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

#FLOATING_IP
 config.vm.define "floating-ip" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "floating-ip"
 net.vm.network "private_network", auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname floating-ip;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.10/24 dev eth1;"\
		  "ip link set dev eth1 up;"
		  "echo 'net.ipv4.ip_nonlocal_bind=1' >> /etc/sysctl.conf;"\
                  "echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf;"\
                  "sysctl -p;"   		  
		  "apt install -y mc;"
		 end
 end	  

#BALANCER1
 config.vm.define "balancer1" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "balancer1"
 net.vm.network "private_network", auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname balancer1;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.60/24 dev eth1;"\
		  "ip link set dev eth1 up;"\
		  "apt install -y keepalived;"\
		  "touch /etc/keepalived/keepalived.conf;"\
		  "apt install -y mc;"
		end
 end	  

#BALANCER2
 config.vm.define "balancer2" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "balancer2"
 net.vm.network "private_network", auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname balancer2;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.80/24 dev eth1;"\
		  "ip link set dev eth1 up;"\
		  "apt install -y keepalived;"\
		  "touch /etc/keepalived/keepalived.conf;"\
		  "apt install -y mc;"
		end
 end	  

#WEB SERVER1
 config.vm.define "web-server1" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "web-server1"
 net.vm.network "private_network",auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname web-server1;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.91/24 dev eth1;"\
                  "ip link set dev eth1 up;"\
		  "apt install -y mc;"\
                  "apt install -y nginx;"\
                  "echo “this is first webserver” > /usr/share/nginx/html/index.html;" 
      end
 end

#WEB SERVER2
 config.vm.define "web-server2" do |net|
 net.vm.box = "bento/ubuntu-20.04"
 net.vm.hostname = "web-server2"
 net.vm.network "private_network",auto_config: false, virtualbox__intnet: true
  net.vm.provision "shell" do |s|
        s.inline = "hostname web-server2;"\
          "apt update;"\
		  "apt upgrade;"\
		  "ip addr add 172.28.128.92/24 dev eth1;"\
          "ip link set dev eth1 up;"\
		  "apt install -y mc;"\
          "apt install -y nginx;"\
          "echo “this is second webserver” > /usr/share/nginx/html/index.html;" 
      end
 end

end	

vrrp_script chk_nginx {
   script "/usr/bin/curl -I 172.28.128.91"
   script "/usr/bin/curl -I 172.28.128.92"
   interval 2
}

vrrp_instance VI_1 {
   state MASTER
   interface eth1
   virtual_router_id 50
   priority 150
   advert_int 1
   authentication {
    auth_type PASS
    auth_pass netology_work
   }
virtual_ipaddress {
172.28.128.10/24 dev eth1
}
track_script {
   chk_nginx
}
}

vrrp_script chk_nginx {
   script "/usr/bin/curl -I 172.28.128.92"
   script "/usr/bin/curl -I 172.28.128.91"
   interval 2
}

vrrp_instance VI_1 {
   state BACKUP
   interface eth1
   virtual_router_id 50
   priority 50
   advert_int 1
   authentication {
    auth_type PASS
    auth_pass netology_work
   }
virtual_ipaddress {
172.28.128.10/24 dev eth1
}
track_script {
   chk_nginx
}
}
vagrant@balancer1:~$ ip a show dev eth1
3: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:00:36:58 brd ff:ff:ff:ff:ff:ff
    inet 172.28.128.60/24 scope global eth1
       valid_lft forever preferred_lft forever
    inet 172.28.128.10/24 scope global secondary eth1
       valid_lft forever preferred_lft forever
   vagrant@balancer1:~$ sudo ip link set eth1 down


vagrant@balancer1:~$ sudo ip link set eth1 down
vagrant@balancer1:~$ ip a show dev eth1
3: eth1: <BROADCAST,MULTICAST> mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    link/ether 08:00:27:00:36:58 brd ff:ff:ff:ff:ff:ff
    inet 172.28.128.60/24 scope global eth1
       valid_lft forever preferred_lft forever
vagrant@balancer2:~$ ip a show dev eth1
3: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:64:76:21 brd ff:ff:ff:ff:ff:ff
    inet 172.28.128.80/24 scope global eth1
       valid_lft forever preferred_lft forever
    inet 172.28.128.10/24 scope global secondary eth1
       valid_lft forever preferred_lft forever
    
3.
 Можно использовать 2 VIP
 На балансировщике настроить два интефейса.
 virtual_ipaddress {
 x.x.x.x dev eth1
 x.x.x.x dev eth2	 
