1.
Выполняется системный вызов:
chdir("/tmp")	=0 с кодом возврата 0, успешное выполние

2.
penat(AT_FDCWD, "/usr/share/misc/magic.mgc", O_RDONLY) = 3

3.
cat /dev/null > /tmp/not_del_me

4.
Зомби процессы не занимают ресурсы ОС (CPU, RAM, IO) Ядро поддерживает мин набор информации о зомби PID, статус, информацию об использовании ресурсов. Но зомби процессы занимают место в таблице процессов ядра, если она заполнится то новые процессы создаваться не будут.

5.
PID    COMM               FD ERR PATH
401    systemd-udevd      14   0 /sys/fs/cgroup/unified/system.slice/systemd-udevd.service/cgroup.procs
401    systemd-udevd      14   0 /sys/fs/cgroup/unified/system.slice/systemd-udevd.service/cgroup.threads
797    vminfo              4   0 /var/run/utmp
596    dbus-daemon        -1   2 /usr/local/share/dbus-1/system-services
596    dbus-daemon        18   0 /usr/share/dbus-1/system-services
596    dbus-daemon        -1   2 /lib/dbus-1/system-services
596    dbus-daemon        18   0 /var/lib/snapd/dbus-1/system-services/
603    irqbalance          6   0 /proc/interrupts
603    irqbalance          6   0 /proc/stat
603    irqbalance          6   0 /proc/irq/20/smp_affinity
603    irqbalance          6   0 /proc/irq/0/smp_affinity
603    irqbalance          6   0 /proc/irq/1/smp_affinity
603    irqbalance          6   0 /proc/irq/8/smp_affinity
603    irqbalance          6   0 /proc/irq/12/smp_affinity
603    irqbalance          6   0 /proc/irq/14/smp_affinity
603    irqbalance          6   0 /proc/irq/15/smp_affinity

6.
Part of the utsname information is also accessible via /proc/sys/kernel/{ostype, hostname, osrelease, version, domainname}

7.
; - после этого символа выполняется следующая команда, т.е. последовательное выполнение команд в одной строке. 
&& логическое И , при успешном выполнении предыдущей команды будет выполнена следующая.
set -e полностью прерывает выполнение команд при неуспешном выполнении предыдущей. 
Да при выполнении команд последовательно set -e можно заменить && ,
если в скрипте то в этом случае будет выход из скрипта что возможно не желательно.

8.
set
-e полностью прерывает выполнение сценария при неуспешном выполнении предыдущей команды. 
-u оболочка проверяет инициализацию переменных в скрипте. Если переменной не будет, скрипт немедленно завершиться. 
-x печатает в стандартный вывод все команды перед их исполнением , полезен для отладки.
-o pipefail проверяет все ли команды в пайпах завершились успешно.
Применение этих команд во время отладки скриптов принесет хорошую пользу. 

9.
ps -o stat 
выводит два процесса пользователя с метками 
S R+ 
ps -eo stat 
выводит все процессы системы 
Наиболее часто встречающиеся процессы с меткой S (прерываемый сон)
Процессы S, Ss, Ssl interruptible sleep (waiting for an event to complete) s лидер сессии l является многопоточным
